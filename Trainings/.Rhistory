knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse)
df <- wafanyikazi
+ Tibble: Creates siple dataframes.
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
+ Tibble: Creates siple dataframes.
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
?purrr
?tidyverse
## Picking variables
df1 <- df %>%
select(Sid,Gender, Age)
View(df1)
df1 <- df %>%
select(-Sid, -Promotion)
View(df1)
df1 <- df %>%
select(contains("e"))
View(df1)
df1 <- df %>%
select(-ends_with("t"))
View(df1)
View(df)
df1 <- df %>%
select(Sid:Marital_Status)
View(df1)
df2 <- df %>%
filter(Age < 25)
View(df2)
df2 <- df %>%
filter(Age >= 25 & Age <40)
min(df2$Age)
max(df2$Age)
### Let us drop all males
df2 <- df %>%
filter(Gender == "Female")
View(df2)
df3 <- df %>%
mutate(Jinsia = ifelse(Gender == "Female","Mke","Mme"))
table(df3$Jinsia, useNA = "always")
table(df3$Gender, useNA = "always")
df3 <- df %>%
mutate(prop_leavedays = Leave_Days/365)
View(df3)
df3 <- df %>%
mutate(Jinsia = if_else(Gender == "Female","Mke","Mme"))
View(df3)
table(df3$Gender, useNA = "always")
table(df3$Jinsia, useNA = "always")
mutate_all()
?mutate_all()
df4 <- df %>%
mutate_all(~paste0(0, "x"))
View(df4)
df4 <- df %>%
mutate_all(~paste0(., "x"))
df4 <- df %>%
mutate_all(~paste0(., "_x"))
df4 <- df %>%
mutate_all(tolower(.))
df4 <- df %>%
mutate_all(~paste0(., "_x"))
df4 <- df %>%
mutate_all(tolower)
View(df4)
?funs
df4 <- df %>%
mutate_if(vars(Gender, County), tolower)
df4 <- df %>%
mutate_if(vars(Gender, County), tolower(.))
df4 <- df %>%
mutate_at(vars(Gender, County), tolower(.))
df4 <- df %>%
mutate_at(vars(Gender, County), tolower)
df4 <- df %>%
mutate_at(vars(Gender, County), funs(paste(.,"x")))
df4 <- df %>%
mutate_if(is.numeric, funs(.*100))
View(df4)
df4 <- df %>%
mutate_if(is.character, as.factor(.)))
df4 <- df %>%
mutate_if(is.character, as.factor(.))
df4 <- df %>%
mutate_if(is.character, as.factor)
df5 <- df %>%
group_by(Gender) %>%
count()
View(df5)
df5 <- df %>%
group_by(Gender) %>%
count() %>%
rename(Count = n)
View(df5)
df5 <- df %>%
group_by(Gender) %>%
}
summarise(Count = n())
df5 <- df %>%
group_by(Department) %>%
summarise(Avg_Income = mean(Income, na.rm = T))
View(df5)
tab <- df %>%
group_by(County) %>%
summarise_at(vars(Age, Leave_Days, Income), mean(.,na.rm = TRUE))
tab <- df %>%
group_by(County) %>%
summarise_at(vars(Age, Leave_Days, Income), funs(mean(.,na.rm = TRUE)))
View(tab)
tab <- df %>%
group_by(County) %>%
summarise_if(is.numeric, funs(mean(.,na.rm = TRUE)))
View(tab)
tab <- df %>%
group_by(County,Gender) %>%
summarise_if(is.numeric, funs(mean(.,na.rm = TRUE)))
df6 <- df %>%
arrange(Gender, Age)
View(df6)
?min_rank
?tibble()
## Generatin a dummy dataset
Year <- c(2010,2011,2012,2013,2014)
Q1 <-c(1003,1532,954,841,823)
Q2 <-c(1359,933,992,1434,1034)
Q3 <-c(1326,904,845,1480,1184)
Q4 <-c(1122,1479,889,1174,1317)
sales = data.frame(Year,Q1 ,Q2, Q3, Q4)
View(sales)
rm(df1)
rm(df2)
rm(df3)
rm(df4)
rm(df4)
rm(df4)
rm(df5)
rm(df6)
## Method 1: Using gather()
sales1 <- sales %>%
gather("Quarters","Sales_Values", -Year)
View(sales1)
sales2 <- sales %>%
pivot_longer(-Year, names_to = "Quarters", values_to = "Sales_Values")
View(sales2)
sales2 <- sales %>%
pivot_longer(-Year, names_to = "Quarters", values_to = "Sales_Values",values_drop_na = TRUE)
sales3 <- sales1 %>%
spread(Quarters, Sales_Values)
View(sales3)
## Method 1: Using spread()
sales3 <- sales1 %>%
spread(Quarters, Sales_Values)
View(sales3)
sales4 <- sales2 %>%
pivot_wider(-Year, names_from = "Quarters", values_from = "Sales_Values")
View(sales4)
sales4 <- sales2 %>%
pivot_wider(names_from = "Quarters", values_from = "Sales_Values")
View(sales4)
stringr::str_split("Shelmith:Kariuki",":")
stringr::str_to_sentence("she came")
## Let us generate a graph that sows us the number of individuals per department.
## First come up with the table showing frequencies and percentages.
tab <- df %>%
group_by(Department) %>%
count() %>%
rename(Count = n) %>%
mutate(Percentage = round(Count/ sum(Count) *100,0))
View(tab)
tab <- df %>%
group_by(Department) %>%
count() %>%
rename(Count = n) %>%
ungroup() %>%
mutate(Percentage = round(Count/ sum(Count) *100,0))
View(tab)
## Let us create a theme that we will use in this training
training_theme <- theme_hc()+
theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_blank(),
plot.title = element_text( size = rel(1.6), hjust = 0.5),
plot.subtitle = element_text(size = rel(1.5), hjust = 0.5),
axis.text.x = element_text(size =rel(1.5),angle = 0),
axis.text.y = element_text(size =rel(1.5),angle = 0),
axis.title = element_text( size = rel(1.55)),
axis.line.x = element_line(size = 1.5, colour = "#c94a38"),
panel.background = element_rect(fill = NA))
rstudio_blue <- "#4AA4DE"
bargraph1 <- ggplot(data = tab, aes(x = Department, y = Percentage))+
geom_bar(stat = "identity", fill = rstudio_blue)+
geom_text(aes(label = Percentage), vjust = 0.25, hjust = 0.5)+
training_theme+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph1
## Generate the graph
bargraph1 <- ggplot(data = tab, aes(x = Department, y = Percentage))+
geom_bar(stat = "identity", fill = rstudio_blue)+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4)+
training_theme+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph1
## Let us generate a graph that sows us the number of individuals per department and gender category.
## First come up with the table showing frequencies and percentages.
tab <- df %>%
group_by(Department, Gender) %>%
count() %>%
rename(Count = n) %>%
ungroup() %>%
group_by(Department) %>%
mutate(Percentage = round(Count/ sum(Count) *100,1))
## Generate the graph
bargraph2 <- ggplot(data = tab, aes(x = Department, y = Percentage, fill=Gender))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4,position = position_dodge(width = 0.9))+
training_theme+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph2
## Generate the graph
bargraph2 <- ggplot(data = tab, aes(x = Department, y = Percentage, fill=Gender))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4,position = position_dodge(width = 0.9))+
training_theme+
scale_fill_brewer(palette = "dodgerblue3")+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph2
## Generate the graph
bargraph2 <- ggplot(data = tab, aes(x = Department, y = Percentage, fill=Gender))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4,position = position_dodge(width = 0.9))+
training_theme+
scale_fill_brewer(palette = "dogerblue3")+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph2
bargraph2 <- ggplot(data = tab, aes(x = Department, y = Percentage, fill=Gender))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4,position = position_dodge(width = 0.9))+
training_theme+
scale_fill_brewer(palette = "blues")+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph2
## Generate the graph
bargraph2 <- ggplot(data = tab, aes(x = Department, y = Percentage, fill=Gender))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4,position = position_dodge(width = 0.9))+
training_theme+
scale_fill_brewer(palette = "Blues")+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph2
## Let us create a theme that we will use in this training
training_theme <- theme_hc()+
theme(legend.position = "right",
legend.direction = "vertical",
legend.title = element_blank(),
plot.title = element_text( size = rel(1.6), hjust = 0.5),
plot.subtitle = element_text(size = rel(1.5), hjust = 0.5),
axis.text.x = element_text(size =rel(1.5),angle = 0),
axis.text.y = element_text(size =rel(1.5),angle = 0),
axis.title = element_text( size = rel(1.55)),
axis.line.x = element_line(size = 1.5, colour = "black"),
panel.background = element_rect(fill = NA))
rstudio_blue <- "#4AA4DE"
## Let us generate a graph that sows us the number of individuals per department.
## First come up with the table showing frequencies and percentages.
tab <- df %>%
group_by(Department) %>%
count() %>%
rename(Count = n) %>%
ungroup() %>%
mutate(Percentage = round(Count/ sum(Count) *100,1))
## Generate the graph
bargraph1 <- ggplot(data = tab, aes(x = Department, y = Percentage))+
geom_bar(stat = "identity", fill = rstudio_blue)+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4)+
training_theme+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph1
## Let us generate a graph that sows us the number of individuals per department and gender category.
## First come up with the table showing frequencies and percentages.
tab <- df %>%
group_by(Department, Gender) %>%
count() %>%
rename(Count = n) %>%
ungroup() %>%
group_by(Department) %>%
mutate(Percentage = round(Count/ sum(Count) *100,1))
## Generate the graph
bargraph2 <- ggplot(data = tab, aes(x = Department, y = Percentage, fill=Gender))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4,position = position_dodge(width = 0.9))+
training_theme+
scale_fill_brewer(palette = "Blues")+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage")
bargraph2
tab <- df %>%
group_by(Department) %>%
summarise(avg_income = mean(Income, na.rm = T))
View(tab)
tab <- df %>%
group_by(Department) %>%
summarise(avg_income = mean(Income, na.rm = T))
## Generate the graph
linegraph1 <- ggplot(data = tab, aes(x = Department, y = avg_income, group = 1))+
geom_line(stat = "identity", color = rstudio_blue)+
geom_text(aes(label = avg_income), vjust = -0.25, hjust = 0.5, size=4)+
training_theme+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
linegraph1
## Let us generate a graph that sows us the average income per department.
## First come up with the table showing frequencies and percentages.
tab <- df %>%
group_by(Department) %>%
summarise(avg_income = round(mean(Income, na.rm = T), 2))
## Generate the graph
linegraph1 <- ggplot(data = tab, aes(x = Department, y = avg_income, group = 1))+
geom_line(stat = "identity", color = rstudio_blue)+
geom_text(aes(label = avg_income), vjust = -0.25, hjust = 0.5, size=4)+
training_theme+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
linegraph1
## Let us generate a graph that sows us the average income per department and gender.
## First come up with the table showing frequencies and percentages.
tab <- df %>%
group_by(Department, Gender) %>%
summarise(avg_income = round(mean(Income, na.rm = T), 2))
## Generate the graph
linegraph2 <- ggplot(data = tab, aes(x = Department, y = avg_income, group = Gender, color = Gender))+
geom_line(stat = "identity", size = 2)+
training_theme+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
linegraph2
tab <- df %>%
group_by(Department, Gender) %>%
summarise(avg_income = round(mean(Income, na.rm = T), 2))
## Generate the graph
linegraph2 <- ggplot(data = tab, aes(x = Department, y = avg_income, group = Gender, color = Gender))+
geom_line(stat = "identity", size = 2)+
training_theme+
scale_color_manual(values = c("Yellow", "Red"))+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
linegraph2
## Generate the graph
boxplot1 <- ggplot(data = df, aes(x = Department, y = Income))+
geom_boxplot( fill = rstudio_blue)+
training_theme+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
boxplot1
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
boxplot1 <- ggplot(data = df, aes(x = Department, y = Income, fill = Gender))+
geom_boxplot()+
training_theme+
scale_fill_brewer(palette = "Blues")+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
boxplot1
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
boxplot2 <- ggplot(data = df, aes(x = Department, y = Income, fill = Gender))+
geom_boxplot()+
training_theme+
scale_fill_brewer(palette = "Blues")+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
boxplot2
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
area1 <- ggplot(data = df, aes(x = Department))+
geom_area(fill = rstudio_blue)+
training_theme+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
area1
?geom_area
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
area1 <- ggplot(data = df, aes(x = Income))+
geom_area(fill = rstudio_blue)+
training_theme+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
area1
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
area1 <- ggplot(data = df, aes(x = Income))+
geom_area(stat = "bin", fill = rstudio_blue)+
training_theme+
labs(title = "Distribution of Average Income per Department", x="Department",
y="Average Income")
area1
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
area2 <- ggplot(data = df, aes(x = Income, fill = Gender))+
geom_area(stat = "bin")+
training_theme+
scale_fill_brewer(palette = "Blues")+
labs(title = "Distribution of Average Income", x="Income",
y="Count")
area2
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
hist1 <- ggplot(data = df, aes(x = Income))+
geom_histogram(stat = "bin", fill = rstudio_blue)+
training_theme+
labs(title = "Distribution of Average Income", x="Income",
y="Count")
hist1
## Let us generate a graph that sows us the average income per department and gender.
## Generate the graph
hist2 <- ggplot(data = df, aes(x = Income, fill = Gender))+
geom_histogram(stat = "bin")+
training_theme+
scale_fill_brewer(palette = "Blues")+
labs(title = "Distribution of Average Income", x="Income",
y="Count")
hist2
?facet_grid
View(df)
tab <- df %>%
group_by(Department) %>%
count() %>%
rename(Count = n) %>%
ungroup() %>%
mutate(Percentage = round(Count/ sum(Count) *100,1))
## Generate the graph
bargraph1 <- ggplot(data = tab, aes(x = Department, y = Percentage))+
geom_bar(stat = "identity", fill = rstudio_blue)+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4)+
training_theme+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage") + facet_grid(vars(County), vars(Marital_Status))
bargraph1
## Let us generate a graph that sows us the number of individuals per department.
## First come up with the table showing frequencies and percentages.
tab <- df %>%
group_by(Department, County, Marital_Status) %>%
count() %>%
rename(Count = n) %>%
ungroup() %>%
mutate(Percentage = round(Count/ sum(Count) *100,1))
## Generate the graph
bargraph1 <- ggplot(data = tab, aes(x = Department, y = Percentage))+
geom_bar(stat = "identity", fill = rstudio_blue)+
geom_text(aes(label = Percentage), vjust = -0.25, hjust = 0.5, size=4)+
training_theme+
labs(title = "Distribution of Respondents per Department", x="Department",
y="Percentage") + facet_grid(vars(County), vars(Marital_Status))
bargraph1
View(boxplot1)
